<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
  
  <module name="TreeWalker">
  
<!-- verifica che classi con solo COSTANTI o STATIC abbiano un costruttore -->
    <module name="HideUtilityClassConstructor">
      <property name="severity" value="warning"/>
    </module>
<!-- verifica che vi siano piu' classi nello stesso file -->
    <module name="OneTopLevelClass"/>
<!-- override di equals() senza gestire l'override con equals(object) -->
    <module name="CovariantEquals"/>
<!-- override di equals() senza gestire l'override con EqualsHashCode() -->
    <module name="EqualsHashCode"/>
<!-- verifica ; senza senso -->
    <module name="EmptyStatement">
      <property name="severity" value="warning"/>
    </module>
<!-- verifica che l'elemento NULL sia a sinistra di una comparazione-->
    <module name="EqualsAvoidNull">
      <property name="severity" value="warning"/>
    </module>
<!-- verifica che variabili locali mai cambiate non siano FINAL -->
    <module name="FinalLocalVariable">
      <property name="severity" value="warning"/>
      <property name="tokens" value="VARIABLE_DEF,PARAMETER_DEF"/>
    </module>
<!-- verifica che variabili locali abbiano un dublicato nella stessa classe a meno di COSTUTTORE e SETTER  -->
    <module name="HiddenField">
      <property name="severity" value="warning"/>
      <property name="ignoreConstructorParameter" value="true"/>
      <property name="ignoreSetter" value="true"/>        
      <property name="tokens" value="VARIABLE_DEF"/>
    </module>
<!-- For performance reasons, it is preferable to use the predefined constants TRUE and FALSE respect Boolean istance -->
    <module name="IllegalInstantiation">
      <property name="classes" value="java.lang.Boolean"/>
    </module>
<!-- verifica di utilizzare token tipici -->
    <module name="IllegalToken">
      <property name="tokens" value="LITERAL_NATIVE"/>
    </module>
<!-- verifica INNER ASSIGMENT come: String s = Integer.toString(i = 2); -->
    <module name="InnerAssignment">
      <property name="severity" value="warning"/>
    </module>
<!-- verifica che in cicli for la variabile di ciclo venga modificata -->
    <module name="ModifiedControlVariable"/>
<!-- verifica scritture con booleani complesse -->
    <module name="SimplifyBooleanExpression"/>
    <module name="SimplifyBooleanReturn"/>
<!-- verifica string = invece di equals -->
    <module name="StringLiteralEquality"/>
<!-- verifica catch -->
    <module name="IllegalCatch">
      <property name="illegalClassNames" value="java.lang.Throwable, java.lang.RuntimeException"/>
    </module>

    <module name="PackageDeclaration"/>

    <module name="MultipleVariableDeclarations"/>

    <module name="UnnecessaryParentheses">
      <property name="severity" value="warning"/>
    </module>

    <module name="OneStatementPerLine"/>

<!-- verifica che non vi siano main nelle classi -->
    <module name="UncommentedMain"/>

<!-- verifica complessita' ciclomatica -->
    <module name="CyclomaticComplexity">
      <property name="severity" value="warning"/>
      <property name="max" value="30"/>
    </module>
<!-- numero massimo di AND OR NOT in  una espressione  -->
    <module name="BooleanExpressionComplexity">
      <property name="max" value="5"/>
    </module>

    <module name="NPathComplexity">
      <property name="severity" value="warning"/>
    </module>

<!-- names -->
    <module name="PackageName">
      <property name="format" value="^org.dew.[a-z0-9]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$"/>
    </module>
    <module name="ConstantName">
      <property name="format" value="^[a-zA-Z][a-zA-Z0-9_]*$"/>
    </module>
<!-- class Names -->
    <module name="TypeName">
      <property name="format" value="^[A-Z][a-zA-Z0-9_]*$"/>
      <property name="tokens" value="CLASS_DEF"/>
    </module>
<!-- interface names -->
    <module name="TypeName">
      <property name="format" value="^I[A-Z][a-zA-Z0-9_]*$"/>
      <property name="tokens" value="INTERFACE_DEF"/>
    </module>
<!-- verifica ANNOTATION sulla stessa riga -->
    <module name="AnnotationLocation">
      <property name="allowSamelineMultipleAnnotations" value="false"/>
      <property name="allowSamelineSingleParameterlessAnnotation" value="true"/>
    </module>
  
  </module>

</module>
